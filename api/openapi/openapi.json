{
    "openapi": "3.0.3",
    "info": {
      "title": "Anon Chat API",
      "version": "1.0.0",
      "description": "API for anonymous chat application with challenge-based authentication"
    },
    "paths": {
      "/challenge/first": {
        "get": {
          "summary": "Get First Challenge",
          "description": "Retrieves the initial challenge for user authentication. This challenge must be solved before registration.",
          "operationId": "GetFirstChallenge",
          "responses": {
            "200": {
              "description": "Successful response containing the challenge details",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/GetFirstChallengeResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/challenge/solve": {
        "post": {
          "summary": "Solve First Challenge",
          "description": "Submit solution for the first challenge. This step is required before user registration.",
          "operationId": "SolveFirstChallenge",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SolveFirstChallengeRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful challenge solution verification",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SolveFirstChallengeResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/users/register": {
        "post": {
          "summary": "Register New User",
          "description": "Register a new user in the system. Requires successful completion of the first challenge.",
          "operationId": "RegisterUser",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterUserRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "User registration result",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RegisterUserResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "GetFirstChallengeResponse": {
          "type": "object",
          "description": "Response containing the first challenge details",
          "properties": {
            "challenge": {
              "type": "string",
              "description": "The challenge string that needs to be solved",
              "minLength": 64,
              "maxLength": 64
            },
            "token": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64
            },
            "difficulty": {
              "type": "integer",
              "format": "int32",
              "description": "Difficulty level of the challenge",
              "minimum": 1,
              "maximum": 9999
            }
          },
          "required": [
            "challenge",
            "difficulty",
            "token"
          ]
        },
        "SolveFirstChallengeRequest": {
          "type": "object",
          "description": "Request to solve the first challenge",
          "properties": {
            "challenge": {
              "type": "string",
              "description": "The challenge string that was received",
              "minLength": 64,
              "maxLength": 64
            },
            "token": {
              "type": "string",
              "minLength": 1,
              "maxLength": 64
            },
            "nonce": {
              "type": "string",
              "description": "The solution to the challenge",
              "minLength": 1,
              "maxLength": 64
            },
            "difficulty": {
              "type": "integer",
              "format": "int32",
              "description": "Difficulty level of the challenge",
              "minimum": 1,
              "maximum": 9999
            }
          },
          "required": [
            "challenge",
            "nonce",
            "difficulty",
            "token"
          ]
        },
        "SolveFirstChallengeResponse": {
          "type": "object",
          "description": "Response after successful challenge solution",
          "properties": {
            "userId": {
              "type": "string"
            }
          },
          "required": [
            "userId"
          ]
        },
        "RegisterUserRequest": {
          "type": "object",
          "description": "Request to register a new user",
          "properties": {
            "userId": {
              "type": "string",
              "description": "Verified user ID from challenge solution",
              "minLength": 1,
              "maxLength": 64
            },
            "challenge": {
              "type": "string",
              "description": "The solved challenge string",
              "minLength": 64,
              "maxLength": 64
            },
            "nonce": {
              "type": "string",
              "description": "The solution to the challenge",
              "minLength": 1,
              "maxLength": 64
            },
            "nickname": {
              "type": "string",
              "description": "User's chosen display name",
              "minLength": 1,
              "maxLength": 128
            },
            "tags": {
              "type": "array",
              "maxItems": 10,
              "items": {
                "description": "User's interest tags",
                "type": "string",
                "minLength": 1,
                "maxLength": 128
              }
            },
            "publicKey": {
              "type": "string",
              "description": "User's public key for secure communication",
              "minLength": 1,
              "maxLength": 512
            },
            "difficulty": {
              "type": "integer",
              "format": "int32",
              "description": "Difficulty level of the solved challenge",
              "minimum": 1,
              "maximum": 9999
            }
          },
          "required": [
            "userId",
            "challenge", 
            "nonce",
            "nickname",
            "publicKey",
            "difficulty",
            "tags"
          ]
        },
        "RegisterUserResponse": {
          "type": "object",
          "description": "Response after user registration attempt",
          "properties": {
            "userId": {
              "type": "string",
              "description": "Registered user ID",
              "minLength": 1,
              "maxLength": 64
            },
            "success": {
              "type": "boolean",
              "description": "Whether the registration was successful"
            },
            "message": {
              "type": "string",
              "description": "Additional information about the registration result",
              "maxLength": 512
            }
          },
          "required": [
            "userId",
            "success",
            "message"
          ]
        }
      }
    }
  }
  