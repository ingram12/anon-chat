// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: api/proto/users.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetFirstChallengeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFirstChallengeRequest) Reset() {
	*x = GetFirstChallengeRequest{}
	mi := &file_api_proto_users_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFirstChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFirstChallengeRequest) ProtoMessage() {}

func (x *GetFirstChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_users_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFirstChallengeRequest.ProtoReflect.Descriptor instead.
func (*GetFirstChallengeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_users_proto_rawDescGZIP(), []int{0}
}

type GetFirstChallengeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Challenge     string                 `protobuf:"bytes,1,opt,name=challenge,proto3" json:"challenge,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	Difficulty    int32                  `protobuf:"varint,4,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFirstChallengeResponse) Reset() {
	*x = GetFirstChallengeResponse{}
	mi := &file_api_proto_users_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFirstChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFirstChallengeResponse) ProtoMessage() {}

func (x *GetFirstChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_users_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFirstChallengeResponse.ProtoReflect.Descriptor instead.
func (*GetFirstChallengeResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_users_proto_rawDescGZIP(), []int{1}
}

func (x *GetFirstChallengeResponse) GetChallenge() string {
	if x != nil {
		return x.Challenge
	}
	return ""
}

func (x *GetFirstChallengeResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetFirstChallengeResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetFirstChallengeResponse) GetDifficulty() int32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

type SolveFirstChallengeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Challenge     string                 `protobuf:"bytes,2,opt,name=challenge,proto3" json:"challenge,omitempty"`
	Solution      string                 `protobuf:"bytes,3,opt,name=solution,proto3" json:"solution,omitempty"`
	Token         string                 `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	Difficulty    int32                  `protobuf:"varint,5,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SolveFirstChallengeRequest) Reset() {
	*x = SolveFirstChallengeRequest{}
	mi := &file_api_proto_users_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SolveFirstChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolveFirstChallengeRequest) ProtoMessage() {}

func (x *SolveFirstChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_users_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolveFirstChallengeRequest.ProtoReflect.Descriptor instead.
func (*SolveFirstChallengeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_users_proto_rawDescGZIP(), []int{2}
}

func (x *SolveFirstChallengeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SolveFirstChallengeRequest) GetChallenge() string {
	if x != nil {
		return x.Challenge
	}
	return ""
}

func (x *SolveFirstChallengeRequest) GetSolution() string {
	if x != nil {
		return x.Solution
	}
	return ""
}

func (x *SolveFirstChallengeRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SolveFirstChallengeRequest) GetDifficulty() int32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

type SolveFirstChallengeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Challenge     string                 `protobuf:"bytes,2,opt,name=challenge,proto3" json:"challenge,omitempty"`
	Difficulty    int32                  `protobuf:"varint,3,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SolveFirstChallengeResponse) Reset() {
	*x = SolveFirstChallengeResponse{}
	mi := &file_api_proto_users_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SolveFirstChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolveFirstChallengeResponse) ProtoMessage() {}

func (x *SolveFirstChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_users_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolveFirstChallengeResponse.ProtoReflect.Descriptor instead.
func (*SolveFirstChallengeResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_users_proto_rawDescGZIP(), []int{3}
}

func (x *SolveFirstChallengeResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SolveFirstChallengeResponse) GetChallenge() string {
	if x != nil {
		return x.Challenge
	}
	return ""
}

func (x *SolveFirstChallengeResponse) GetDifficulty() int32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

type RegisterUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Challenge     string                 `protobuf:"bytes,2,opt,name=challenge,proto3" json:"challenge,omitempty"`
	Solution      string                 `protobuf:"bytes,3,opt,name=solution,proto3" json:"solution,omitempty"`
	Nickname      string                 `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Tags          []string               `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	PublicKey     string                 `protobuf:"bytes,6,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Difficulty    int32                  `protobuf:"varint,7,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterUserRequest) Reset() {
	*x = RegisterUserRequest{}
	mi := &file_api_proto_users_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserRequest) ProtoMessage() {}

func (x *RegisterUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_users_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserRequest.ProtoReflect.Descriptor instead.
func (*RegisterUserRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_users_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RegisterUserRequest) GetChallenge() string {
	if x != nil {
		return x.Challenge
	}
	return ""
}

func (x *RegisterUserRequest) GetSolution() string {
	if x != nil {
		return x.Solution
	}
	return ""
}

func (x *RegisterUserRequest) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *RegisterUserRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *RegisterUserRequest) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *RegisterUserRequest) GetDifficulty() int32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

type RegisterUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterUserResponse) Reset() {
	*x = RegisterUserResponse{}
	mi := &file_api_proto_users_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterUserResponse) ProtoMessage() {}

func (x *RegisterUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_users_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterUserResponse.ProtoReflect.Descriptor instead.
func (*RegisterUserResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_users_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterUserResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RegisterUserResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterUserResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_api_proto_users_proto protoreflect.FileDescriptor

const file_api_proto_users_proto_rawDesc = "" +
	"\n" +
	"\x15api/proto/users.proto\x12\x05users\"\x1a\n" +
	"\x18GetFirstChallengeRequest\"\x87\x01\n" +
	"\x19GetFirstChallengeResponse\x12\x1c\n" +
	"\tchallenge\x18\x01 \x01(\tR\tchallenge\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\x12\x16\n" +
	"\x06userId\x18\x03 \x01(\tR\x06userId\x12\x1e\n" +
	"\n" +
	"difficulty\x18\x04 \x01(\x05R\n" +
	"difficulty\"\xa4\x01\n" +
	"\x1aSolveFirstChallengeRequest\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\x1c\n" +
	"\tchallenge\x18\x02 \x01(\tR\tchallenge\x12\x1a\n" +
	"\bsolution\x18\x03 \x01(\tR\bsolution\x12\x14\n" +
	"\x05token\x18\x04 \x01(\tR\x05token\x12\x1e\n" +
	"\n" +
	"difficulty\x18\x05 \x01(\x05R\n" +
	"difficulty\"s\n" +
	"\x1bSolveFirstChallengeResponse\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\x1c\n" +
	"\tchallenge\x18\x02 \x01(\tR\tchallenge\x12\x1e\n" +
	"\n" +
	"difficulty\x18\x03 \x01(\x05R\n" +
	"difficulty\"\xd5\x01\n" +
	"\x13RegisterUserRequest\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\x1c\n" +
	"\tchallenge\x18\x02 \x01(\tR\tchallenge\x12\x1a\n" +
	"\bsolution\x18\x03 \x01(\tR\bsolution\x12\x1a\n" +
	"\bnickname\x18\x04 \x01(\tR\bnickname\x12\x12\n" +
	"\x04tags\x18\x05 \x03(\tR\x04tags\x12\x1c\n" +
	"\tpublicKey\x18\x06 \x01(\tR\tpublicKey\x12\x1e\n" +
	"\n" +
	"difficulty\x18\a \x01(\x05R\n" +
	"difficulty\"b\n" +
	"\x14RegisterUserResponse\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\tR\x06userId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage2\x92\x02\n" +
	"\vUserService\x12X\n" +
	"\x11GetFirstChallenge\x12\x1f.users.GetFirstChallengeRequest\x1a .users.GetFirstChallengeResponse\"\x00\x12^\n" +
	"\x13SolveFirstChallenge\x12!.users.SolveFirstChallengeRequest\x1a\".users.SolveFirstChallengeResponse\"\x00\x12I\n" +
	"\fRegisterUser\x12\x1a.users.RegisterUserRequest\x1a\x1b.users.RegisterUserResponse\"\x00B\x1dZ\x1banon-chat-backend/api/protob\x06proto3"

var (
	file_api_proto_users_proto_rawDescOnce sync.Once
	file_api_proto_users_proto_rawDescData []byte
)

func file_api_proto_users_proto_rawDescGZIP() []byte {
	file_api_proto_users_proto_rawDescOnce.Do(func() {
		file_api_proto_users_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_users_proto_rawDesc), len(file_api_proto_users_proto_rawDesc)))
	})
	return file_api_proto_users_proto_rawDescData
}

var file_api_proto_users_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_api_proto_users_proto_goTypes = []any{
	(*GetFirstChallengeRequest)(nil),    // 0: users.GetFirstChallengeRequest
	(*GetFirstChallengeResponse)(nil),   // 1: users.GetFirstChallengeResponse
	(*SolveFirstChallengeRequest)(nil),  // 2: users.SolveFirstChallengeRequest
	(*SolveFirstChallengeResponse)(nil), // 3: users.SolveFirstChallengeResponse
	(*RegisterUserRequest)(nil),         // 4: users.RegisterUserRequest
	(*RegisterUserResponse)(nil),        // 5: users.RegisterUserResponse
}
var file_api_proto_users_proto_depIdxs = []int32{
	0, // 0: users.UserService.GetFirstChallenge:input_type -> users.GetFirstChallengeRequest
	2, // 1: users.UserService.SolveFirstChallenge:input_type -> users.SolveFirstChallengeRequest
	4, // 2: users.UserService.RegisterUser:input_type -> users.RegisterUserRequest
	1, // 3: users.UserService.GetFirstChallenge:output_type -> users.GetFirstChallengeResponse
	3, // 4: users.UserService.SolveFirstChallenge:output_type -> users.SolveFirstChallengeResponse
	5, // 5: users.UserService.RegisterUser:output_type -> users.RegisterUserResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_proto_users_proto_init() }
func file_api_proto_users_proto_init() {
	if File_api_proto_users_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_users_proto_rawDesc), len(file_api_proto_users_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_users_proto_goTypes,
		DependencyIndexes: file_api_proto_users_proto_depIdxs,
		MessageInfos:      file_api_proto_users_proto_msgTypes,
	}.Build()
	File_api_proto_users_proto = out.File
	file_api_proto_users_proto_goTypes = nil
	file_api_proto_users_proto_depIdxs = nil
}
