// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
