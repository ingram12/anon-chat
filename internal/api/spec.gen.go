// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
