// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
