// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/9RXW2/jNhP9KwN+H9AX1ZekLRq/pbtoYbQoFs5u+1D0gZZGFjciqSVHzgoL//diKFkX",
	"S44TNBugb6ZJze2cM0N+EbHVhTVoyIvVF+HjDLUMP39B+lk5T28ymedodrhBX1jjkTcT9LFTBSlrxEoc",
	"dyC2hqQyyuyAMoSUv4f4aAASJKlyLyJROFugI4XBVXtibPp9hj0DnlxtWxIYxMQDWdgieJvvMRGR0PLz",
	"b2h2lInVD99FQivTX1JVoFiJ2oo4RCJRaariMqdq7Pltuwc57jEHm4akumAjkVqnJYmVUIaur2r/Spda",
	"rG5ubm6C/3q5bJ0rQ7hDx97J3qNhx+ejXo6CPkTC4adSOUzE6i/Rj6aXzdH43+33dvsRY2K3G9wpT+g+",
	"eHQb/FSipylIwwbX1zXnQYLBByg9uuciWOMzAvJ1ADt1/q9xMyq+N1JP5Mol/cZDnFmPBhLli1xWEM4O",
	"Ul1e/XgB5kgYa+Lz5Sx5yeicUvI5XIpEUW5zFf+K1dlc6hNwjxWk1oHHuHQsdK1Lo2IZDg+8fr+8uuiW",
	"5C7QRhFqf9Y1l9wFEvLxZxdQy8/r2v5y0W5L52TFu0zjdTL2/Qc6lSpMAs9h/RZSZ3WfuU3tn1nqE9k2",
	"3qOBfmvEe/zq43Mqby7JZXVf7NgyZWWHXGuduwApSCLUBY2ErtF7OSXz2yRR/FPmoEytr2Bna0sKJB2Y",
	"d+jLnCaIM0LRl3GMfoIkf2ZIGbqx7QfpofkqLXPR2txam6M0j4F/LF4H/wvBfMwiags4hd0dd6rToXu5",
	"QYcGNzVwX2bQcj0dxqj+gyP2VZroS8/xYx944jyfZM0Thd/pZLrFDenTyeZJtB8Hywe5O0y0j3frMF+k",
	"sabStuQhKglkUeTNlIEHRVkX5bdb6TEBWVKGhrpJRIpydnlrrIE3bOP23VpEYo/O166Ws8VswYWzBRpZ",
	"KLES17PF7JrTlZSFTOetn3nQFP+3w0kZklO4Rx84pIwiJfu15JxCKxkGOoP3mfK9c7r01N1kYYupdcO+",
	"NhMh4nrBKIxv6IJhqPENWVwtFkH11hCaEHyvnvOP3pruzs+//u8wFSvxv3n3KJg3L4L5+edAQHVYlbuO",
	"Vu7M22D8KjiEbq+1dFWdHASH0KXHJ3rIhFpx3IWd6pB35VYr6nTOUEw0yQYKT1iA4k5X8/gIwWg0jnGY",
	"EKCoBYGefrJJ9WIgPDIgDkMRkivx8BXp8FjTeZwQ4z4D+3DnaiQ8pEHwM00ERsbPj6+T8zzYjN8voEz9",
	"NKg8oZ7Bpq6bH/RDq4scQ3zNWDolzogI/bvXV2LA1OPtlaGfvGFOYP5hdKlsbn1DhFt4fscHCJU7HA6H",
	"fwIAAP//X/uKm5kQAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
