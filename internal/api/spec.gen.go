// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"yPzfM372CdMgXZWCzebvAAAA//8FVfAh+B4AAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
